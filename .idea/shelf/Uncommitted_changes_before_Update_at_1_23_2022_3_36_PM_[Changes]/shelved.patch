Index: src/main/AssetSetter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport entity.*;\r\nimport monster.Bullet;\r\nimport monster.Monster1;\r\nimport monster.Monster2;\r\nimport object.obtainable.OBJ_Skeleton;\r\nimport object.others.OBJ_Bigmonster;\r\nimport object.others.OBJ_Door;\r\nimport object.others.OBJ_Key;\r\nimport object.decoration.OBJ_Bridge;\r\nimport object.decoration.OBJ_Castle;\r\nimport object.decoration.OBJ_House;\r\nimport object.obtainable.OBJ_PowerStone;\r\nimport object.decoration.OBJ_Tree;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class AssetSetter {\r\n\r\n    GamePanel gp;\r\n\r\n    // Bullet and Monster\r\n    public int bullettimecount;\r\n    int j = 0;\r\n    int numbering[][] = new int[27][2];\r\n    final int numMonster2[] = new int[4];\r\n\r\n    public AssetSetter(GamePanel gp){\r\n        this.gp = gp;\r\n        numMonster2[0] = 6;\r\n        numMonster2[1] = 6 + 8;\r\n        numMonster2[2] = 6 + 8 + 8;\r\n        numMonster2[3] = 6 + 8 + 8 + 5;\r\n    }\r\n\r\n    public void setObject(){\r\n\r\n        // Cave Mission\r\n        gp.obj[0] = new OBJ_Door(gp);\r\n        gp.obj[0].worldX = gp.tileSize*47;\r\n        gp.obj[0].worldY = gp.tileSize*27;\r\n\r\n        gp.obj[1] = new OBJ_Door(gp);\r\n        gp.obj[1].worldX = gp.tileSize*49;\r\n        gp.obj[1].worldY = gp.tileSize*25;\r\n\r\n        gp.obj[2] = new OBJ_Door(gp);\r\n        gp.obj[2].worldX = gp.tileSize*52;\r\n        gp.obj[2].worldY = gp.tileSize*29;\r\n\r\n        gp.obj[3] = new OBJ_Door(gp);\r\n        gp.obj[3].worldX = gp.tileSize*54;\r\n        gp.obj[3].worldY = gp.tileSize*27;\r\n\r\n        gp.obj[4] = new OBJ_Door(gp);\r\n        gp.obj[4].worldX = gp.tileSize*47;\r\n        gp.obj[4].worldY = gp.tileSize*31;\r\n\r\n        gp.obj[5] = new OBJ_Key(gp);\r\n        gp.obj[5].worldX = gp.tileSize*45;\r\n        gp.obj[5].worldY = gp.tileSize*22;\r\n\r\n        gp.obj[6] = new OBJ_Key(gp);\r\n        gp.obj[6].worldX = gp.tileSize*50;\r\n        gp.obj[6].worldY = gp.tileSize*26;\r\n\r\n        gp.obj[7] = new OBJ_Key(gp);\r\n        gp.obj[7].worldX = gp.tileSize*49;\r\n        gp.obj[7].worldY = gp.tileSize*32;\r\n\r\n        gp.obj[8] = new OBJ_Key(gp);\r\n        gp.obj[8].worldX = gp.tileSize*53;\r\n        gp.obj[8].worldY = gp.tileSize*22;\r\n\r\n        // Set Object here\r\n\r\n        gp.obj[9] = new OBJ_PowerStone(gp);\r\n        gp.obj[9].worldX = gp.tileSize*57;\r\n        gp.obj[9].worldY = gp.tileSize*27;\r\n\r\n        gp.obj[10] = new OBJ_PowerStone(gp);\r\n        gp.obj[10].worldX = gp.tileSize*144;\r\n        gp.obj[10].worldY = gp.tileSize*51;\r\n\r\n        gp.obj[11] = new OBJ_PowerStone(gp);\r\n        gp.obj[11].worldX = gp.tileSize*126;\r\n        gp.obj[11].worldY = gp.tileSize*115;\r\n\r\n        // Fallen Tree\r\n        gp.obj[13] = new OBJ_Tree(gp);\r\n        gp.obj[13].worldX = gp.tileSize*64;\r\n        gp.obj[13].worldY = gp.tileSize*66;\r\n        gp.obj[13].collision = false;\r\n\r\n        gp.obj[14] = new OBJ_House(gp);\r\n        gp.obj[14].worldX = gp.tileSize*31;\r\n        gp.obj[14].worldY = gp.tileSize*60;\r\n\r\n        gp.obj[15] = new OBJ_House(gp);\r\n        gp.obj[15].worldX = gp.tileSize*31;\r\n        gp.obj[15].worldY = gp.tileSize*71;\r\n\r\n        gp.obj[16] = new OBJ_House(gp);\r\n        gp.obj[16].worldX = gp.tileSize*24;\r\n        gp.obj[16].worldY = gp.tileSize*71;\r\n\r\n        gp.obj[17] = new OBJ_House(gp);\r\n        gp.obj[17].worldX = gp.tileSize*76;\r\n        gp.obj[17].worldY = gp.tileSize*66;\r\n\r\n        gp.obj[18] = new OBJ_Castle(gp);\r\n        gp.obj[18].worldX = gp.tileSize*23;\r\n        gp.obj[18].worldY = gp.tileSize*61;\r\n\r\n        // Broken Bridge\r\n        gp.obj[19] = new OBJ_Bridge(gp);\r\n        gp.obj[19].worldX = gp.tileSize*53;\r\n        gp.obj[19].worldY = gp.tileSize*78;\r\n\r\n        // Skeleton in Maze\r\n        gp.obj[20] = new OBJ_Skeleton(gp);\r\n        gp.obj[20].worldX = gp.tileSize*98;\r\n        gp.obj[20].worldY = gp.tileSize*101;\r\n\r\n        gp.obj[21] = new OBJ_Skeleton(gp);\r\n        gp.obj[21].worldX = gp.tileSize*101;\r\n        gp.obj[21].worldY = gp.tileSize*110;\r\n\r\n        gp.obj[22] = new OBJ_Skeleton(gp);\r\n        gp.obj[22].worldX = gp.tileSize*110;\r\n        gp.obj[22].worldY = gp.tileSize*118;\r\n\r\n        gp.obj[23] = new OBJ_Skeleton(gp);\r\n        gp.obj[23].worldX = gp.tileSize*112;\r\n        gp.obj[23].worldY = gp.tileSize*104;\r\n\r\n        gp.obj[24] = new OBJ_Skeleton(gp);\r\n        gp.obj[24].worldX = gp.tileSize*114;\r\n        gp.obj[24].worldY = gp.tileSize*121;\r\n\r\n        gp.obj[25] = new OBJ_Skeleton(gp);\r\n        gp.obj[25].worldX = gp.tileSize*122;\r\n        gp.obj[25].worldY = gp.tileSize*98;\r\n\r\n        gp.obj[26] = new OBJ_Bigmonster(gp);\r\n        gp.obj[26].worldX = gp.tileSize*1;\r\n        gp.obj[26].worldY = gp.tileSize*1;\r\n\r\n    }\r\n\r\n    public void setNPC(){\r\n\r\n        gp.npc[0] = new NPC_King(gp);\r\n        gp.npc[0].worldX = gp.tileSize * 21;\r\n        gp.npc[0].worldY = gp.tileSize * 67;\r\n        gp.npc[0].conversationState = 0;\r\n\r\n        gp.npc[1] = new NPC_Villager(gp);\r\n        gp.npc[1].worldX = gp.tileSize * 27;\r\n        gp.npc[1].worldY = gp.tileSize * 75;\r\n        gp.npc[1].conversationState = 1;\r\n\r\n        gp.npc[2] = new NPC_Villager(gp);\r\n        gp.npc[2].worldX = gp.tileSize * 24;\r\n        gp.npc[2].worldY = gp.tileSize * 74;\r\n        gp.npc[2].conversationState = 2;\r\n\r\n        gp.npc[3] = new NPC_Villager(gp);\r\n        gp.npc[3].worldX = gp.tileSize * 32;\r\n        gp.npc[3].worldY = gp.tileSize * 74;\r\n        gp.npc[3].conversationState = 3;\r\n\r\n        gp.npc[4] = new NPC_Villager(gp);\r\n        gp.npc[4].worldX = gp.tileSize * 31;\r\n        gp.npc[4].worldY = gp.tileSize * 63;\r\n        gp.npc[4].conversationState = 4;\r\n\r\n        // Fallen Tree\r\n        gp.npc[5] = new NPC_Worker(gp);\r\n        gp.npc[5].worldX = gp.tileSize * 62;\r\n        gp.npc[5].worldY = gp.tileSize * 68;\r\n        gp.npc[5].conversationState = 1;\r\n\r\n        // Broken Bridge\r\n        gp.npc[6] = new NPC_Worker(gp);\r\n        gp.npc[6].worldX = gp.tileSize * 55;\r\n        gp.npc[6].worldY = gp.tileSize * 75;\r\n        gp.npc[6].conversationState = 3;\r\n\r\n        // Missing Kid\r\n        gp.npc[7] = new NPC_Kid(gp);\r\n        gp.npc[7].worldX = gp.tileSize * 45;\r\n        gp.npc[7].worldY = gp.tileSize * 31;\r\n        gp.npc[7].conversationState = 0;\r\n\r\n        // Mother\r\n        gp.npc[8] = new NPC_Mother(gp);\r\n        gp.npc[8].worldX = gp.tileSize * 55;\r\n        gp.npc[8].worldY = gp.tileSize * 48;\r\n        gp.npc[8].conversationState = 0;\r\n\r\n        // Forest Old Man\r\n        gp.npc[9] = new NPC_Oldman(gp);\r\n        gp.npc[9].worldX = gp.tileSize * 76;\r\n        gp.npc[9].worldY = gp.tileSize * 69;\r\n\r\n        // Sign Board Cave\r\n        gp.npc[10] = new NPC_OBJ_Signboard(gp);\r\n        gp.npc[10].worldX = gp.tileSize * 54;\r\n        gp.npc[10].worldY = gp.tileSize * 46;\r\n        gp.npc[10].conversationState = 1;\r\n\r\n        // Sign Board Forest\r\n        gp.npc[11] = new NPC_OBJ_Signboard(gp);\r\n        gp.npc[11].worldX = gp.tileSize * 78;\r\n        gp.npc[11].worldY = gp.tileSize * 70;\r\n        gp.npc[11].conversationState = 2;\r\n\r\n        // Sign Board Maze\r\n        gp.npc[12] = new NPC_OBJ_Signboard(gp);\r\n        gp.npc[12].worldX = gp.tileSize * 54;\r\n        gp.npc[12].worldY = gp.tileSize * 88;\r\n        gp.npc[12].conversationState = 3;\r\n\r\n    }\r\n\r\n    public void setMonster1(){\r\n\r\n        // Load location of monsters\r\n        final int numMonster = 36;\r\n        int numbering[][] = new int[numMonster][2];\r\n        String filePath = \"/textfile/Monster1Location.txt\";\r\n\r\n        try{\r\n            InputStream is = getClass().getResourceAsStream(filePath);\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(is));\r\n\r\n            int col = 0;\r\n            int row = 0;\r\n\r\n            while(col < 2 && row < numMonster){\r\n\r\n                String line = br.readLine();\r\n\r\n                while(col < 2){\r\n\r\n                    String numbers[] = line.split(\"\\t\");\r\n\r\n                    int num = Integer.parseInt(numbers[col]);\r\n                    numbering[row][col] = num;\r\n                    col++;\r\n                }\r\n                if(col == 2){\r\n                    col = 0;\r\n                    row++;\r\n                }\r\n            }\r\n            br.close();\r\n\r\n        }catch (Exception e){\r\n            System.out.println(\"r\");\r\n        }\r\n\r\n        // Set monster\r\n        for(int i = 0; i < numMonster; i++){\r\n            gp.monster1[i] = new Monster1(gp);\r\n            gp.monster1[i].worldX = gp.tileSize*numbering[i][0];\r\n            gp.monster1[i].worldY = gp.tileSize*numbering[i][1];\r\n        }\r\n\r\n    }\r\n\r\n    public void setMonster2(){\r\n\r\n        // Load location of monsters\r\n        final int numMonster = 27;\r\n        String filePath = \"/textfile/Monster2Location.txt\";\r\n\r\n        try{\r\n            InputStream is = getClass().getResourceAsStream(filePath);\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(is));\r\n\r\n            int col = 0;\r\n            int row = 0;\r\n\r\n            while(col < 2 && row < numMonster){\r\n\r\n                String line = br.readLine();\r\n\r\n                while(col < 2){\r\n\r\n                    String numbers[] = line.split(\"\\t\");\r\n\r\n                    int num = Integer.parseInt(numbers[col]);\r\n                    numbering[row][col] = num;\r\n                    col++;\r\n                }\r\n                if(col == 2){\r\n                    col = 0;\r\n                    row++;\r\n                }\r\n            }\r\n            br.close();\r\n\r\n        }catch (Exception e){\r\n            System.out.println(\"r\");\r\n        }\r\n\r\n        // Set monster\r\n        // For Up, i from 0 to 5\r\n        for(int i = 0; i < numMonster2[0]; i++){\r\n            gp.monster2[i] = new Monster2(gp);\r\n            gp.monster2[i].worldX = gp.tileSize*numbering[i][0];\r\n            gp.monster2[i].worldY = gp.tileSize*numbering[i][1];\r\n            gp.monster2[i].direction = \"up\";\r\n        }\r\n\r\n        // For Up, i from 6 to 13\r\n        for(int i = 6; i < numMonster2[1]; i++){\r\n            gp.monster2[i] = new Monster2(gp);\r\n            gp.monster2[i].worldX = gp.tileSize*numbering[i][0];\r\n            gp.monster2[i].worldY = gp.tileSize*numbering[i][1];\r\n            gp.monster2[i].direction = \"up\";\r\n        }\r\n\r\n        // For Up, i from 14 to 21\r\n        for(int i = 14; i < numMonster2[2]; i++){\r\n            gp.monster2[i] = new Monster2(gp);\r\n            gp.monster2[i].worldX = gp.tileSize*numbering[i][0];\r\n            gp.monster2[i].worldY = gp.tileSize*numbering[i][1];\r\n            gp.monster2[i].direction = \"up\";\r\n        }\r\n\r\n        // For Up, i from 22 to 26\r\n        for(int i = 22; i < numMonster2[3]; i++){\r\n            gp.monster2[i] = new Monster2(gp);\r\n            gp.monster2[i].worldX = gp.tileSize*numbering[i][0];\r\n            gp.monster2[i].worldY = gp.tileSize*numbering[i][1];\r\n            gp.monster2[i].direction = \"up\";\r\n        }\r\n    }\r\n\r\n    // Bullet Setting\r\n    public void setBullet() {\r\n\r\n        bullettimecount++;\r\n\r\n        if(j >= 19) {\r\n            j = 0;\r\n        }\r\n        if(bullettimecount < numMonster2[0]){\r\n            gp.bullet[bullettimecount][j] = new Bullet(gp);\r\n            gp.bullet[bullettimecount][j].worldX = gp.tileSize*numbering[bullettimecount][0];\r\n            gp.bullet[bullettimecount][j].worldY = gp.tileSize*numbering[bullettimecount][1] - gp.tileSize;\r\n            gp.bullet[bullettimecount][j].direction = \"up\";\r\n        }\r\n        else if(bullettimecount < numMonster2[1]){\r\n            gp.bullet[bullettimecount][j] = new Bullet(gp);\r\n            gp.bullet[bullettimecount][j].worldX = gp.tileSize*numbering[bullettimecount][0];\r\n            gp.bullet[bullettimecount][j].worldY = gp.tileSize*numbering[bullettimecount][1] + gp.tileSize;\r\n            gp.bullet[bullettimecount][j].direction = \"down\";\r\n        }\r\n        else if(bullettimecount < numMonster2[2]){\r\n            gp.bullet[bullettimecount][j] = new Bullet(gp);\r\n            gp.bullet[bullettimecount][j].worldX = gp.tileSize*numbering[bullettimecount][0] - gp.tileSize;\r\n            gp.bullet[bullettimecount][j].worldY = gp.tileSize*numbering[bullettimecount][1];\r\n            gp.bullet[bullettimecount][j].direction = \"left\";\r\n        }\r\n        else if(bullettimecount < numMonster2[3]){\r\n            gp.bullet[bullettimecount][j] = new Bullet(gp);\r\n            gp.bullet[bullettimecount][j].worldX = gp.tileSize*numbering[bullettimecount][0] + gp.tileSize;\r\n            gp.bullet[bullettimecount][j].worldY = gp.tileSize*numbering[bullettimecount][1];\r\n            gp.bullet[bullettimecount][j].direction = \"right\";\r\n        }\r\n        else if(bullettimecount == 60){\r\n            bullettimecount = 0;\r\n            j++;\r\n        }\r\n\r\n\r\n//        if(bullettimecount == 90){\r\n//            bullettimecount = 0;\r\n//            if(j >= 19) {\r\n//                j = 0;\r\n//            }\r\n//\r\n//            // For Up, i from 0 to 5\r\n//            for(int i = 0; i < numMonster2[0]; i++){\r\n//                gp.bullet[i][j] = new Bullet(gp);\r\n//                gp.bullet[i][j].worldX = gp.tileSize*numbering[i][0];\r\n//                gp.bullet[i][j].worldY = gp.tileSize*numbering[i][1] - gp.tileSize;\r\n//                gp.bullet[i][j].direction = \"up\";\r\n//            }\r\n//\r\n//            // For Up, i from 6 to 13\r\n//            for(int i = 6; i < numMonster2[1]; i++){\r\n//                gp.bullet[i][j] = new Bullet(gp);\r\n//                gp.bullet[i][j].worldX = gp.tileSize*numbering[i][0];\r\n//                gp.bullet[i][j].worldY = gp.tileSize*numbering[i][1] + gp.tileSize;\r\n//                gp.bullet[i][j].direction = \"down\";\r\n//            }\r\n//\r\n//            // For Up, i from 14 to 21\r\n//            for(int i = 14; i < numMonster2[2]; i++){\r\n//                gp.bullet[i][j] = new Bullet(gp);\r\n//                gp.bullet[i][j].worldX = gp.tileSize*numbering[i][0] - gp.tileSize;\r\n//                gp.bullet[i][j].worldY = gp.tileSize*numbering[i][1];\r\n//                gp.bullet[i][j].direction = \"left\";\r\n//            }\r\n//\r\n//            // For Up, i from 22 to 26\r\n//            for(int i = 22; i < numMonster2[3]; i++){\r\n//                gp.bullet[i][j] = new Bullet(gp);\r\n//                gp.bullet[i][j].worldX = gp.tileSize*numbering[i][0] + gp.tileSize;\r\n//                gp.bullet[i][j].worldY = gp.tileSize*numbering[i][1];\r\n//                gp.bullet[i][j].direction = \"right\";\r\n//            }\r\n//\r\n//            j++;\r\n//        }\r\n\r\n    }\r\n\r\n    // Cave Mission\r\n    public void createDoor(int num, int col, int row, boolean existDoor){\r\n        if(existDoor == true){\r\n            gp.obj[num].worldX = gp.tileSize*col;\r\n            gp.obj[num].worldY = gp.tileSize*row;\r\n        }\r\n        else if(existDoor == false){\r\n            gp.obj[num].worldX = gp.tileSize*0;\r\n            gp.obj[num].worldY = gp.tileSize*0;\r\n        }\r\n    }\r\n\r\n    public void endingSceneLocationSet(){\r\n        // King\r\n        gp.npc[0].worldX = gp.tileSize * 26;\r\n        gp.npc[0].worldY = gp.tileSize * 68;\r\n        gp.npc[0].direction = \"right\";\r\n\r\n        // Player\r\n        gp.player.worldX = gp.tileSize * 30;\r\n        gp.player.worldY = gp.tileSize * 68;\r\n        gp.player.direction = \"left\";\r\n\r\n        // Villager\r\n        gp.npc[1].worldX = gp.tileSize * 31;\r\n        gp.npc[1].worldY = gp.tileSize * 65;\r\n        gp.npc[1].direction = \"down\";\r\n\r\n        // Villager\r\n        gp.npc[2].worldX = gp.tileSize * 30;\r\n        gp.npc[2].worldY = gp.tileSize * 70;\r\n        gp.npc[2].direction = \"up\";\r\n\r\n        // Worker\r\n        gp.npc[6].worldX = gp.tileSize * 29;\r\n        gp.npc[6].worldY = gp.tileSize * 66;\r\n        gp.npc[6].direction = \"down\";\r\n\r\n        // Missing Kid\r\n        gp.npc[7].worldX = gp.tileSize * 28;\r\n        gp.npc[7].worldY = gp.tileSize * 71;\r\n        gp.npc[7].direction = \"right\";\r\n\r\n        // Mother\r\n        gp.npc[8].worldX = gp.tileSize * 28;\r\n        gp.npc[8].worldY = gp.tileSize * 70;\r\n        gp.npc[8].direction = \"right\";\r\n\r\n\r\n    }\r\n\r\n    public void powerstoneBullet(){\r\n        gp.bullet[27][0] = new Bullet(gp);\r\n        gp.bullet[27][0].worldX = gp.tileSize * 31;\r\n        gp.bullet[27][0].worldY = gp.tileSize * 68;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/AssetSetter.java b/src/main/AssetSetter.java
--- a/src/main/AssetSetter.java	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/src/main/AssetSetter.java	(date 1642866060054)
@@ -93,7 +93,6 @@
         gp.obj[13] = new OBJ_Tree(gp);
         gp.obj[13].worldX = gp.tileSize*64;
         gp.obj[13].worldY = gp.tileSize*66;
-        gp.obj[13].collision = false;
 
         gp.obj[14] = new OBJ_House(gp);
         gp.obj[14].worldX = gp.tileSize*31;
@@ -158,22 +157,22 @@
         gp.npc[0].worldY = gp.tileSize * 67;
         gp.npc[0].conversationState = 0;
 
-        gp.npc[1] = new NPC_Villager(gp);
+        gp.npc[1] = new NPC_Villager(gp, 1);
         gp.npc[1].worldX = gp.tileSize * 27;
         gp.npc[1].worldY = gp.tileSize * 75;
         gp.npc[1].conversationState = 1;
 
-        gp.npc[2] = new NPC_Villager(gp);
+        gp.npc[2] = new NPC_Villager(gp, 2);
         gp.npc[2].worldX = gp.tileSize * 24;
         gp.npc[2].worldY = gp.tileSize * 74;
         gp.npc[2].conversationState = 2;
 
-        gp.npc[3] = new NPC_Villager(gp);
+        gp.npc[3] = new NPC_Villager(gp, 3);
         gp.npc[3].worldX = gp.tileSize * 32;
         gp.npc[3].worldY = gp.tileSize * 74;
         gp.npc[3].conversationState = 3;
 
-        gp.npc[4] = new NPC_Villager(gp);
+        gp.npc[4] = new NPC_Villager(gp, 4);
         gp.npc[4].worldX = gp.tileSize * 31;
         gp.npc[4].worldY = gp.tileSize * 63;
         gp.npc[4].conversationState = 4;
Index: src/main/UI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport entity.Entity;\r\nimport object.others.OBJ_BlackScreen;\r\nimport object.others.OBJ_Heart;\r\nimport object.obtainable.OBJ_PowerStone;\r\nimport object.story.OBJ_Ending;\r\nimport object.story.OBJ_Intro;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\n\r\n\r\npublic class UI {\r\n\r\n    GamePanel gp;\r\n    Graphics2D g2;\r\n    Font timesBD;\r\n    BufferedImage heart_full, heart_half, heart_blank;\r\n    public boolean messageOn = false;\r\n    public String message = \"\";\r\n    int messageCounter = 0;\r\n    public boolean gameFinished = false;\r\n    public String currentDialogue = \"\";\r\n    public int commandNum = 0;\r\n    public int titleScreenState = 0; // 0 for menu\r\n\r\n    // Create Mission Window\r\n    public String missionList[] = new String[4];\r\n    BufferedImage powerstone_image;\r\n    public int missionCount = 0;\r\n\r\n    // If talk to NPC, will continue talking. If interact object, only once.\r\n    public int dialogueType = 0;\r\n    public final int conversationState = 1;\r\n    public final int objInteractionState = 2;\r\n\r\n    // CheckPoint Renew\r\n    public boolean hitCheckPoint = false;\r\n    public int frameCount = 0;\r\n\r\n    // Black Screen Effect\r\n    BufferedImage blackScreen;\r\n    BufferedImage controlScreen;\r\n\r\n    // Intro Ending Related\r\n    BufferedImage introImage[] = new BufferedImage[6];\r\n    BufferedImage endingImage[] = new BufferedImage[6];\r\n    public int sceneNum = 0;\r\n    public int sceneMessageNum = 0;\r\n    String introMessage[][] = new String[6][5];\r\n    String endingMessage[][] = new String[6][5];\r\n\r\n    // Talk State\r\n    public int introOrEnding = 1; // intro = 1, ending = 2;\r\n    public boolean startConv = true;\r\n    public boolean endConv = false;\r\n    public String introConversation[] = new String[19];\r\n    public int introConvNumber = 0;\r\n    public String endingConversation[] = new String[14];\r\n    public int endingConvNumber = 0;\r\n\r\n    // Pop Out State\r\n    public int popOutMessageNum = 0;\r\n    public int popOutMessageType = 0;\r\n\r\n    // Fade In Fade Out\r\n    public int countFadeTime = 210;\r\n    public int fadeType = 1;        // 1 = Fade Out, 2 = Fade In\r\n    public int endingTimer = 0;\r\n\r\n\r\n    // Constructor\r\n    public UI(GamePanel gp){\r\n        this.gp = gp;\r\n        try {\r\n            InputStream is = getClass().getResourceAsStream(\"/font/timesbd.ttf\");\r\n            timesBD = Font.createFont(Font.TRUETYPE_FONT, is);\r\n        } catch (FontFormatException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        // CREATE HUD OBJECT\r\n        Entity heart = new OBJ_Heart(gp);\r\n        heart_full = heart.image;\r\n        heart_half = heart.image2;\r\n        heart_blank = heart.image3;\r\n\r\n        // CREATE MISSION\r\n        Entity powerstone = new OBJ_PowerStone(gp);\r\n        powerstone_image = powerstone.image;\r\n        missionList[0] = \"Find the pieces in North Cave\";\r\n        missionList[1] = \"Find the pieces in East Forest\";\r\n        missionList[2] = \"Find the pieces in South Maze\";\r\n        missionList[3] = \"Return to the king\";\r\n\r\n        // Maze Effect\r\n        Entity black = new OBJ_BlackScreen(gp);\r\n        blackScreen = black.image;\r\n        controlScreen = black.image2;\r\n\r\n        storySetup();\r\n        conversationSetup();\r\n\r\n    }\r\n\r\n    // All updates drawing\r\n    public void draw(Graphics2D g2){\r\n\r\n        this.g2 = g2;\r\n        g2.setFont(timesBD);\r\n        g2.setColor(Color.white);\r\n\r\n        // TITLE STATE\r\n        if(gp.gameState == gp.titleState){\r\n            drawTitleScreen();\r\n        }\r\n        // PLAY STATE\r\n        else if(gp.gameState == gp.playState){\r\n            drawMissionListWindow();\r\n            drawCheckPointMessage();\r\n            drawPlyaerLife();\r\n            drawDarkRegion();\r\n        }\r\n        // PAUSE STATE\r\n        else if(gp.gameState == gp.pauseState){\r\n            drawPlyaerLife();\r\n            drawPauseScreen();\r\n        }\r\n        // DIALOG STATE\r\n        else if(gp.gameState == gp.dialogState){\r\n            drawPlyaerLife();\r\n            drawMissionListWindow();\r\n            drawDialogScreen();\r\n        }\r\n        // TRANSITION STATE\r\n        else if(gp.gameState == gp.transitionState){\r\n            drawTransitionWindow();\r\n        }\r\n        // STORY STATE\r\n        else if(gp.gameState == gp.videoState){\r\n            if(startConv == true){\r\n                drawStoryImage();\r\n                fadeInEffect();\r\n            }\r\n            else if(introOrEnding == 2){\r\n                if(fadeType == 1){\r\n                    fadeOutEffect();\r\n                    if(countFadeTime >= 255){\r\n                        endingTimer++;\r\n                        if(endingTimer == 60){\r\n                            fadeType = 2;\r\n                            endingTimer = 0;\r\n                            countFadeTime = 255;\r\n                        }\r\n                    }\r\n                }\r\n                else if(fadeType == 2){\r\n                    drawStoryImage();\r\n                    fadeInEffect();\r\n                    if(countFadeTime == 0){\r\n                        fadeType = 3;\r\n                        gp.npc[0].standStill = true;\r\n                    }\r\n                }\r\n                else if(fadeType == 3){\r\n                    drawStoryImage();\r\n                }\r\n                else if(fadeType == 4){\r\n                    sceneNum = 5;\r\n                    drawStoryImage();\r\n                    fadeOutEffect();\r\n                    if(countFadeTime == 255){\r\n                        gp.gameState = gp.titleState;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        // TALK STATE\r\n        else if(gp.gameState == gp.talkState){\r\n            // Intro scene and speech\r\n            if(gp.npc[0].standStill == true && startConv == true){\r\n                drawIntroEndingConversation();\r\n            }\r\n            // Ending scene and speech\r\n            else if(endConv == true){\r\n                if(fadeType == 1){\r\n                    fadeOutEffect();\r\n                    if(countFadeTime >= 255){\r\n                        endingTimer++;\r\n                        if(endingTimer == 30){\r\n                            gp.aSetter.endingSceneLocationSet();\r\n                        }\r\n                        else if(endingTimer == 60){\r\n                            fadeType = 2;\r\n                            endingTimer = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else if(fadeType == 2){\r\n                    fadeInEffect();\r\n                    if(countFadeTime <= 0){\r\n                        fadeType = 3;\r\n                        gp.npc[0].standStill = false;\r\n                    }\r\n                }\r\n                else if(fadeType == 3){\r\n                    if(gp.npc[0].standStill == true && endConv == true){\r\n                        drawIntroEndingConversation();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        // POP OUT STATE\r\n        else if(gp.gameState == gp.popOutState){\r\n            drawDarkRegion();\r\n            drawPlyaerLife();\r\n            drawMissionListWindow();\r\n            popOutMessage();\r\n        }\r\n\r\n    }\r\n    public void drawPlyaerLife(){\r\n        int x = gp.tileSize/2;\r\n        int y = gp.tileSize/2;\r\n        int i = 0;\r\n\r\n        // DRAW MAX HEART\r\n        while(i < gp.player.maxLife/2){\r\n            g2.drawImage(heart_blank, x, y, null);\r\n            i++;\r\n            x += gp.tileSize;\r\n        }\r\n\r\n        // RESET\r\n        x = gp.tileSize/2;\r\n        y = gp.tileSize/2;\r\n        i = 0;\r\n\r\n        // DRAW CURRENT LIFE\r\n        while (i < gp.player.life){\r\n            g2.drawImage(heart_half, x, y, null);\r\n            i++;\r\n            if(i < gp.player.life){\r\n                g2.drawImage(heart_full, x, y, null);\r\n            }\r\n            i++;\r\n            x += gp.tileSize;\r\n        }\r\n\r\n    }\r\n\r\n    // Before game\r\n    public void drawTitleScreen(){\r\n\r\n        if(titleScreenState == 0){\r\n            g2.setColor(new Color(0, 0, 0));\r\n            g2.fillRect(0, 0, gp.screenWidth, gp.screenHeight);\r\n\r\n            // TITLE NAME\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, 76F));\r\n            String text = \"Trevor Transversed\";\r\n            int x = getXforCenteredText(text);\r\n            int y = gp.tileSize*3;\r\n\r\n            // SHADOW\r\n            g2.setColor(Color.gray);\r\n            g2.drawString(text, x+5, y+5);\r\n            // MAIN COLOR\r\n            g2.setColor(Color.white);\r\n            g2.drawString(text, x, y);\r\n\r\n            // CHARACTER IMAGE\r\n            x = gp.screenWidth/2 - (gp.tileSize*2)/2;\r\n            y += gp.tileSize*2;\r\n            g2.drawImage(gp.player.down1, x, y, gp.tileSize*2, gp.tileSize*2, null);\r\n\r\n            // MENU\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, 36F));\r\n\r\n            text = \"NEW GAME\";\r\n            x = getXforCenteredText(text);\r\n            y += gp.tileSize*3.5;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 0){\r\n                g2.drawString(\">\", x-gp.tileSize, y);\r\n            }\r\n\r\n            text = \"QUIT\";\r\n            x = getXforCenteredText(text);\r\n            y += gp.tileSize;\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == 1){\r\n                g2.drawString(\">\", x-gp.tileSize, y);\r\n            }\r\n\r\n        }\r\n        else if(titleScreenState == 1){\r\n            int x = 0;\r\n            int y = 0;\r\n            int width = gp.screenWidth;\r\n            int height = gp.screenHeight;\r\n            g2.drawImage(controlScreen, x, y, width, height, null);\r\n\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 20F));\r\n            g2.setColor(Color.white);\r\n            String words = \"Press Enter Key to Start The Game...\";\r\n            g2.drawString(words, gp.tileSize * 8, gp.tileSize * 11 + 35);\r\n        }\r\n\r\n    }\r\n\r\n    // Intro with image\r\n    public void drawStoryImage(){\r\n\r\n        if(introOrEnding == 1){\r\n            g2.drawImage(introImage[sceneNum], 0, 0, null);\r\n\r\n            int x = gp.tileSize * 1 - 19;\r\n            int y = gp.tileSize * 8 ;\r\n            drawSubWindow(x, y, gp.tileSize*13 + 37, gp.tileSize*3 + 18);\r\n\r\n            x = x + 20;\r\n            y = y + 35;\r\n\r\n            writeCaption(x, y, sceneNum, 0);\r\n        }\r\n        else if(introOrEnding == 2){\r\n            g2.drawImage(endingImage[sceneNum], 0, 0, null);\r\n\r\n            int x = gp.tileSize * 1 - 19;\r\n            int y = gp.tileSize * 8 ;\r\n            drawSubWindow(x, y, gp.tileSize*13 + 37, gp.tileSize*3 + 18);\r\n\r\n            x = x + 20;\r\n            y = y + 35;\r\n\r\n            writeCaption(x, y, sceneNum, 0);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void drawIntroEndingConversation(){\r\n        int x = gp.tileSize*2;\r\n        int y = gp.tileSize/2;\r\n        int width = gp.screenWidth - (gp.tileSize*4);\r\n        int height = gp.tileSize*4;\r\n        if(gp.npc[0].standStill == true && startConv == true){\r\n            drawSubWindow(x, y, width, height);\r\n\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 24F));\r\n            x += 20;\r\n            y += 35;\r\n\r\n            for(String line : introConversation[introConvNumber].split(\"\\n\")){\r\n                g2.drawString(line,x ,y);\r\n                y += 35;\r\n            }\r\n        }\r\n        else if(gp.npc[0].standStill == true && endConv == true){\r\n            drawSubWindow(x, y, width, height);\r\n\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 24F));\r\n            x += 20;\r\n            y += 35;\r\n\r\n            for(String line : endingConversation[endingConvNumber].split(\"\\n\")){\r\n                g2.drawString(line,x ,y);\r\n                y += 35;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void drawPauseScreen(){\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 80F));\r\n        String text = \"PAUSED\";\r\n        int x = getXforCenteredText(text);\r\n        int length = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();\r\n        x = gp.screenWidth/2 - length/2;\r\n        int y = gp.screenHeight/2;\r\n\r\n        g2.drawString(text, x, y);\r\n    }\r\n\r\n    public void drawDialogScreen(){\r\n\r\n        // WINDOW\r\n        int x = gp.tileSize*2;\r\n        int y = gp.tileSize/2;\r\n        int width = gp.screenWidth - (gp.tileSize*4);\r\n        int height = gp.tileSize*4;\r\n        drawSubWindow(x, y, width, height);\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 24F));\r\n        x += 20;\r\n        y += 35;\r\n\r\n        for(String line : currentDialogue.split(\"\\n\")){\r\n            g2.drawString(line,x ,y);\r\n            y += 35;\r\n        }\r\n    }\r\n\r\n    public void drawSubWindow(int x, int y, int width, int height){\r\n\r\n        Color c = new Color(0, 0, 0, 210);\r\n        g2.setColor(c);\r\n        g2.fillRoundRect(x, y, width, height, 35, 35);\r\n\r\n        c = new Color(255, 255, 255);\r\n        g2.setColor(c);\r\n        g2.setStroke(new BasicStroke(5));\r\n        g2.drawRoundRect(x+5, y+5, width-10, height-10, 25, 25);\r\n    }\r\n\r\n    // When entering different Area\r\n    public void drawTransitionWindow(){\r\n        g2.setColor(Color.black);\r\n        g2.fillRect(0, 0, gp.screenWidth, gp.screenHeight);\r\n\r\n        g2.setColor(Color.white);\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 28F));\r\n        int length = (int)g2.getFontMetrics().getStringBounds(currentDialogue, g2).getWidth();\r\n        int x = gp.screenWidth/2 - length/2;\r\n        int y = gp.screenHeight/2;\r\n        g2.drawString(currentDialogue,x ,y);\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 20F));\r\n        String anyKey = \"Press Enter to continue\";\r\n        length = (int)g2.getFontMetrics().getStringBounds(anyKey, g2).getWidth();\r\n        x = gp.screenWidth/2 - length/2;\r\n        y = gp.screenHeight/2 + gp.tileSize;\r\n        g2.drawString(anyKey,x ,y);\r\n    }\r\n\r\n    // Show the mission list\r\n    public void drawMissionListWindow(){\r\n\r\n        Color myColor = new Color(0, 0, 0, 50);\r\n        int x = gp.tileSize * 11;\r\n        int y = gp.tileSize;\r\n\r\n        g2.setColor(myColor);\r\n        g2.fillRect(x, y, gp.tileSize*4, gp.tileSize*2);\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 10F));\r\n        g2.setColor(Color.white);\r\n        x = x + gp.tileSize;\r\n\r\n        // No mission completed\r\n        int i = 0;\r\n\r\n        // First mission completed\r\n        if(missionCount == 1){\r\n            i = 1;\r\n        }\r\n\r\n        // Second mission completed\r\n        else if(missionCount == 2){\r\n            i = 2;\r\n        }\r\n        else if(missionCount == 3){\r\n            i = 3;\r\n            g2.drawImage(powerstone_image, x- gp.tileSize, y - gp.tileSize/2, null);\r\n            g2.drawString(missionList[i],x ,y);\r\n        }\r\n        for(; i < 3; i++){\r\n            y = y + gp.tileSize/2;\r\n            g2.drawImage(powerstone_image, x- gp.tileSize, y - gp.tileSize/2, null);\r\n            g2.drawString(missionList[i],x ,y);\r\n        }\r\n    }\r\n\r\n    // Show the checkpoint of the game progress\r\n    public void drawCheckPointMessage(){\r\n\r\n        if(hitCheckPoint == true){\r\n            int x = 20;\r\n            int y = gp.tileSize * 11;\r\n            int width = gp.tileSize * 2 + 10;\r\n\r\n            g2.setColor(Color.black);\r\n            g2.fillRect(x, y, width, gp.tileSize/2);\r\n\r\n            g2.setColor(Color.white);\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 20F));\r\n            x = x + 4;\r\n            y = y + 17;\r\n            g2.drawString(\"CheckPoint\",x ,y);\r\n\r\n            frameCount++;\r\n            if(frameCount == 120){\r\n                hitCheckPoint = false;\r\n                frameCount = 0;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // Low Vision in Maze Mission\r\n    public void drawDarkRegion(){\r\n\r\n        if(gp.eHandler.enterMaze == true){\r\n            g2.drawImage(blackScreen, 0, 0, null);\r\n        }\r\n    }\r\n\r\n    // Get the length of the text\r\n    public int getXforCenteredText(String text){\r\n\r\n        int length = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();\r\n        int x = gp.screenWidth/2 - length/2;\r\n        return x;\r\n    }\r\n\r\n    // Setup image and caption for Intro and Ending\r\n    public void storySetup(){\r\n\r\n        // Story Objects\r\n        Entity intro = new OBJ_Intro(gp);\r\n        introImage[0] = intro.image;\r\n        introImage[1] = intro.image2;\r\n        introImage[2] = intro.image3;\r\n        introImage[3] = intro.image4;\r\n        introImage[4] = intro.image5;\r\n        introImage[5] = intro.image6;\r\n        introMessage[0][0] =\r\n                \"Ever since Trevor can remember, his parents were always \\n\" +\r\n                \"angry at him for tiny matters. He tried to obey all the \\n\" +\r\n                \"commands from them, but he always feels his parents don’t \\n\" +\r\n                \"satisfy with him. \";\r\n\r\n        introMessage[1][0] =\r\n                \"As he grown up, the quarrels never stop. He didn’t understand \\n\" +\r\n                \"why his parents have been mean at him, but he never \\n\" +\r\n                \"communicates with them. One day, they had a huge quarrel.\";\r\n\r\n        introMessage[2][0] =\r\n                \"He can’t hold it anymore and ran away from home.\";\r\n\r\n        introMessage[3][0] =\r\n                \"He ran to a park and nobody is around. As he was wandering \\n\" +\r\n                \"in the park, many conflicts of the past reappeared in his \\n\" +\r\n                \"memory. He didn’t like being at home and he had no place \\n\" +\r\n                \"to go.\";\r\n\r\n        introMessage[4][0] =\r\n                \"Suddenly, he saw a bright circle shows up from a few miles \\n\" +\r\n                \"away. He has no idea what it is. \";\r\n\r\n        introMessage[5][0] =\r\n                \"He was wondering what the bright circle is and starting to \\n\" +\r\n                \"approach it. Before he could react, he was absorbed by the \\n\" +\r\n                \"bright light. He felt dizzy and lost the consciousness.\";\r\n\r\n        Entity ending = new OBJ_Ending(gp);\r\n        endingImage[0] = ending.image;\r\n        endingImage[1] = ending.image2;\r\n        endingImage[2] = ending.image3;\r\n        endingImage[3] = ending.image4;\r\n        endingImage[4] = ending.image5;\r\n        endingImage[5] = ending.image6;\r\n\r\n        endingMessage[0][0] =\r\n                \"The monster was defeated, and the kingdom was safe now. \\n\" +\r\n                \"The whole kingdom was very happy. In order to express the \\n\" +\r\n                \"gratitude toward Trevor, the king used the Power Stone to \\n\" +\r\n                \"open the portal. \";\r\n\r\n        endingMessage[1][0] =\r\n                \"Through the portal, he traversed back to his world. It was \\n\" +\r\n                \"evening and he was now ready to go home. He wanted to tell \\n\" +\r\n                \"them how he felt and apologize to them.\";\r\n\r\n        endingMessage[2][0] =\r\n                \"On the way back home, he saw his parents are shouting his \\n\" +\r\n                \"name and looking for him anxiously. He realized his parents \\n\" +\r\n                \"care for him. He felt guilty for not treating his parents well \\n\" +\r\n                \"and blessed to have such wonderful parents. \";\r\n\r\n        endingMessage[3][0] =\r\n                \"Without a second of hesitation, he ran towards them. It was \\n\" +\r\n                \"a tear and joy emotion that he could not describe.\";\r\n\r\n        endingMessage[4][0] =\r\n                \"He apologized to his parents for running off without telling \\n\" +\r\n                \"anyone, and for his stubbornness along these years. His \\n\" +\r\n                \"parents also apologized to him for not listening to his thought.\";\r\n\r\n        endingMessage[5][0] =\r\n                \"They smiled happily and go back home together.\";\r\n\r\n    }\r\n\r\n    public void conversationSetup(){\r\n        introConversation[0] =  \"King:\\n\" +\r\n                                \"Ah! Young man. You must be coming from the \\nportal.\";\r\n        introConversation[1] =  \"Trevor:\\n\" +\r\n                                \"What? Who are you? Where am I?\";\r\n        introConversation[2] =  \"King:\\n\" +\r\n                                \"Be calm, young man. You are in the land of \\n\" +\r\n                                \"Cavor Kingdom and I am the king of this \\n\" +\r\n                                \"kingdom. What’s your name?\";\r\n        introConversation[3] =  \"Trevor:\\n\" +\r\n                                \"I… err… I am Trevor.\";\r\n        introConversation[4] =  \"King:\\n\" +\r\n                                \"Surprised not, Trevor. You are here because of \\n\" +\r\n                                \"the Power Stone.\";\r\n        introConversation[5] =  \"Trevor:\\n\" +\r\n                                \"Power Stone?\";\r\n        introConversation[6] =  \"King:\\n\" +\r\n                                \"Our kingdom was attacked by the demon \\n\" +\r\n                                \"dragon. Thanks to Power Stone, we were able \\n\" +\r\n                                \"to fight back the demon dragon. \";\r\n        introConversation[7] =  \"King:\\n\" +\r\n                                \"The dragon fled away but there’s no guarantee \\n\" +\r\n                                \"that it won’t come back. Unfortunately, it \\n\" +\r\n                                \"broke into piece and spread around our kingdom.\";\r\n        introConversation[8] =  \"Trevor:\\n\" +\r\n                                \"What does it have to do with me?\";\r\n        introConversation[9] =  \"King:\\n\" +\r\n                                \"Power Stone was able to open portal that can \\n\" +\r\n                                \"connect to another world.\";\r\n        introConversation[10] = \"King:\\n\" +\r\n                                \"The portal must have been opened during the \\n\" +\r\n                                \"splitting of the Power Stone and you accidentally \\n\" +\r\n                                \"entered the portal. That is why and how you are \\n\" +\r\n                                \"here.\";\r\n        introConversation[11] = \"Trevor:\\n\" +\r\n                                \"Is there a way to go back to my world?\";\r\n        introConversation[12] = \"King:\\n\" +\r\n                                \"By using Power Stone, you can open the portal \\n\" +\r\n                                \"again and go back to your world. \";\r\n        introConversation[13] = \"King:\\n\" +\r\n                                \"We would like to retrieve the pieces of Power \\n\" +\r\n                                \"Stone but we can’t leave our kingdom because \\n\" +\r\n                                \"we need to make sure the kingdom is safe from \\n\" +\r\n                                \"the monsters.\";\r\n        introConversation[14] = \"King:\\n\" +\r\n                                \"So, I will leave the task to you, young man.\";\r\n        introConversation[15] = \"Trevor:\\n\" +\r\n                                \"Do you know where the pieces of the Power \\n\" +\r\n                                \"Stone fall?\";\r\n        introConversation[16] = \"King:\\n\" +\r\n                                \"One is in the North Cave. Another one is in the \\n\" +\r\n                                \"East Forest and the last one is in the South \\n\" +\r\n                                \"Maze.\";\r\n        introConversation[17] = \"King:\\n\" +\r\n                                \"Retrieve the Power Stone so our kingdom is \\n\" +\r\n                                \"safe again and you can go back to your world.\";\r\n        introConversation[18] = \"Trevor:\\n\" +\r\n                                \"I will try my best…\";\r\n\r\n        endingConversation[0] =     \"Trevor:\\n\" +\r\n                                    \"King. I have found all the pieces of the Power \\n\" +\r\n                                    \"Stone.\";\r\n\r\n        endingConversation[1] =     \"King\\n\" +\r\n                                    \"Great job, young man. Now my kingdom is \\n\" +\r\n                                    \"safe. You at the same time, can also return \\n\" +\r\n                                    \"your world.\";\r\n\r\n        endingConversation[2] =     \"Suddenly, the earth is trembling…\";\r\n\r\n        endingConversation[3] =     \"Trevor:\\n\" +\r\n                                    \"What’s happening?\";\r\n\r\n        endingConversation[4] =     \"King:\\n\" +\r\n                                    \"Oh no. The evil monster has come back. Quickly \\n\" +\r\n                                    \"Trevor, use the Power Stone to defeat the \\n\" +\r\n                                    \"monster.\";\r\n\r\n        endingConversation[5] =     \"As Trevor holds the Power Stone up, the stone \\n\" +\r\n                                    \"emits a bright energy from within. The energy \\n\" +\r\n                                    \"power strikes the monster. \";\r\n\r\n        endingConversation[6] =     \"Monster:\\n\" +\r\n                                    \"Er!!!\";\r\n\r\n        endingConversation[7] =     \"The monster could not stand against the strong \\n\" +\r\n                                    \"power from the stone. It shatters and died.\";\r\n\r\n        endingConversation[8] =     \"Trevor:\\n\" +\r\n                                    \"We did it!\";\r\n\r\n        endingConversation[9] =     \"King:\\n\" +\r\n                                    \"You did it, Trevor.\";\r\n\r\n        endingConversation[10] =    \"Suddenly, a portal shows up in front of them.\";\r\n\r\n        endingConversation[11] =    \"Trevor:\\n\" +\r\n                                    \"Is this the portal to back to my world?\";\r\n\r\n        endingConversation[12] =    \"King:\\n\" +\r\n                                    \"Yes, it is. Thank you, young man. You saved us \\n\" +\r\n                                    \"all. We appreciate your kindness. \";\r\n\r\n        endingConversation[13] =    \"Trevor:\\n\" +\r\n                                    \"It would be my honor. \";\r\n\r\n        endingConversation[13] =    \"Villagers:\\n\" +\r\n                                    \"Thank you, Trevor… Goodbye!\";\r\n\r\n        endingConversation[13] =    \"Learnt a lot, Trevor entered the portal, back \\n\" +\r\n                                    \"to the real world.\";\r\n\r\n    }\r\n\r\n    // Write Caption for Intro and Ending\r\n    public void writeCaption(int x, int y, int scene, int num){\r\n\r\n        g2.setColor(Color.white);\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 24F));\r\n        if(introOrEnding == 1){\r\n            for(String line : introMessage[scene][num].split(\"\\n\")){\r\n                g2.drawString(line,x ,y);\r\n                y += 35;\r\n            }\r\n        }\r\n        else if(introOrEnding == 2){\r\n            for(String line : endingMessage[scene][num].split(\"\\n\")){\r\n                g2.drawString(line,x ,y);\r\n                y += 35;\r\n            }\r\n        }\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 20F));\r\n        g2.setColor(Color.gray);\r\n        String words = \"Press Enter Key to Continue...\";\r\n        g2.drawString(words, gp.tileSize * 9, gp.tileSize * 11 + 35);\r\n\r\n    }\r\n\r\n    // Draw Pop Out message from Skeleton\r\n    public void popOutMessage(){\r\n\r\n        if(popOutMessageType == 0){\r\n            int x = gp.tileSize*2;\r\n            int y = gp.tileSize/2;\r\n            int width = gp.screenWidth - (gp.tileSize*4);\r\n            int height = gp.tileSize*4;\r\n            drawSubWindow(x, y, width, height);\r\n\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 24F));\r\n            x += 20;\r\n            y += 35;\r\n\r\n            currentDialogue = \"This is a letter from the skeleton.\";\r\n\r\n            for(String line : currentDialogue.split(\"\\n\")){\r\n                g2.drawString(line,x ,y);\r\n                y += 35;\r\n            }\r\n        }\r\n        else if(popOutMessageType == 1){\r\n            int x = 0;\r\n            int y = 0;\r\n            switch (popOutMessageNum){\r\n                case 20:\r\n                    g2.drawImage(gp.obj[popOutMessageNum].image, x, y, null);\r\n                    break;\r\n                case 21:\r\n                    g2.drawImage(gp.obj[popOutMessageNum].image2, x, y, null);\r\n                    break;\r\n                case 22:\r\n                    g2.drawImage(gp.obj[popOutMessageNum].image3, x, y, null);\r\n                    break;\r\n                case 23:\r\n                    g2.drawImage(gp.obj[popOutMessageNum].image4, x, y, null);\r\n                    break;\r\n                case 24:\r\n                    g2.drawImage(gp.obj[popOutMessageNum].image5, x, y, null);\r\n                    break;\r\n                case 25:\r\n                    g2.drawImage(gp.obj[popOutMessageNum].image6, x, y, null);\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // From 255 to 0, slowly showing\r\n    public void fadeInEffect(){\r\n        if(countFadeTime > 0){\r\n            countFadeTime--;\r\n            Color myColor = new Color(0, 0, 0, countFadeTime);\r\n            g2.setColor(myColor);\r\n            g2.fillRect(0, 0, gp.screenWidth, gp.screenHeight);\r\n        }\r\n\r\n    }\r\n\r\n    // From 0 to 255, slowly disappear\r\n    public void fadeOutEffect(){\r\n\r\n        if(countFadeTime < 255){\r\n            countFadeTime++;\r\n        }\r\n        Color myColor = new Color(0, 0, 0, countFadeTime);\r\n        g2.setColor(myColor);\r\n        g2.fillRect(0, 0, gp.screenWidth, gp.screenHeight);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/UI.java b/src/main/UI.java
--- a/src/main/UI.java	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/src/main/UI.java	(date 1642870602354)
@@ -266,7 +266,7 @@
 
             // TITLE NAME
             g2.setFont(g2.getFont().deriveFont(Font.BOLD, 76F));
-            String text = "Trevor Transversed";
+            String text = "Traversed";
             int x = getXforCenteredText(text);
             int y = gp.tileSize*3;
 
Index: src/object/decoration/OBJ_Tree.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package object.decoration;\r\n\r\nimport entity.Entity;\r\nimport main.GamePanel;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class OBJ_Tree extends Entity {\r\n\r\n    GamePanel gp2;\r\n\r\n    public OBJ_Tree(GamePanel gp) {\r\n\r\n        super(gp);\r\n\r\n        gp2 = gp;\r\n\r\n        name = \"Tree\";\r\n        direction = \"down\";\r\n\r\n        imageWidth = gp.tileSize * 3;\r\n        imageHeight = gp.tileSize * 5;\r\n\r\n        down1 = setupScaledImage(\"/object/xtree\");\r\n        image = down1;\r\n\r\n        collision = true;\r\n\r\n        solidArea.x = 0;\r\n        solidArea.y = 0;\r\n        solidArea.width = gp.tileSize * 3;\r\n        solidArea.height = gp.tileSize * 5;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n    }\r\n\r\n    public void draw(Graphics2D g2){\r\n\r\n        BufferedImage image = this.image;\r\n        int screenX = worldX - gp2.player.worldX + gp2.player.screenX;\r\n        int screenY = worldY - gp2.player.worldY + gp2.player.screenY;\r\n\r\n        if(worldX + gp2.tileSize * 8 > gp2.player.worldX - gp2.player.screenX &&\r\n                worldX - gp2.tileSize * 8 < gp2.player.worldX + gp2.player.screenX &&\r\n                worldY + gp2.tileSize * 8 > gp2.player.worldY - gp2.player.screenY &&\r\n                worldY - gp2.tileSize * 8 < gp2.player.worldY + gp2.player.screenY){\r\n\r\n            g2.drawImage(image, screenX, screenY, imageWidth, imageHeight, null);\r\n        }\r\n        g2.setColor(Color.red);\r\n        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/object/decoration/OBJ_Tree.java b/src/object/decoration/OBJ_Tree.java
--- a/src/object/decoration/OBJ_Tree.java	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/src/object/decoration/OBJ_Tree.java	(date 1642873786494)
@@ -48,8 +48,8 @@
 
             g2.drawImage(image, screenX, screenY, imageWidth, imageHeight, null);
         }
-        g2.setColor(Color.red);
-        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);
+//        g2.setColor(Color.red);
+//        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);
     }
 
 }
Index: src/entity/NPC_Villager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entity;\r\n\r\nimport main.GamePanel;\r\n\r\npublic class NPC_Villager extends Entity{\r\n\r\n    public NPC_Villager(GamePanel gp){\r\n        super(gp);\r\n        type = 5;\r\n        direction = \"down\";\r\n        speed = 1;\r\n\r\n        getCharacterImage(\"npc/oldman\", \"oldman\", 2);\r\n        setDialogue();\r\n    }\r\n\r\n    public void setDialogue(){\r\n\r\n        if(conversationState == 1){\r\n            dialogues[0] = \"Cayor Kingdom is a young kingdom.\";\r\n            dialogues[1] = \"We will be not defeated by some ugly monsters.\";\r\n        }\r\n        else if(conversationState == 2){\r\n            dialogues[0] = \"It’s a blessing to have Power Stone.\";\r\n            dialogues[1] = \"But we have lost it now…\";\r\n        }\r\n        else if(conversationState == 3){\r\n            dialogues[0] = \"We should be always ready.\";\r\n            dialogues[1] = \"The monster could come back anytime soon.\";\r\n        }\r\n        else if(conversationState == 4){\r\n            dialogues[0] = \"I wouldn’t want my kids to live in fear.\";\r\n            dialogues[1] = \"If only the Power Stone could be found again…\";\r\n        }\r\n        else if(conversationState == 5){\r\n            dialogues[0] = \"It’s a blessing to have Power Stone.\";\r\n            dialogues[1] = \"But we have lost it now…\";\r\n        }\r\n\r\n    }\r\n\r\n    public void setAction(){\r\n\r\n\r\n\r\n    }\r\n    public void speak(){\r\n        setDialogue();\r\n        super.speak();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/entity/NPC_Villager.java b/src/entity/NPC_Villager.java
--- a/src/entity/NPC_Villager.java	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/src/entity/NPC_Villager.java	(date 1642866799973)
@@ -4,13 +4,25 @@
 
 public class NPC_Villager extends Entity{
 
-    public NPC_Villager(GamePanel gp){
+    public NPC_Villager(GamePanel gp, int t){
         super(gp);
         type = 5;
         direction = "down";
         speed = 1;
 
-        getCharacterImage("npc/oldman", "oldman", 2);
+        if(t == 1){
+            getCharacterImage("npc/oldman", "oldman", 2);
+        }
+        else if(t == 2){
+            getCharacterImage("npc/villager", "villager", 2);
+        }
+        else if(t == 3){
+            getCharacterImage("npc/villager2", "villager", 2);
+        }
+        else if(t == 4){
+            getCharacterImage("npc/oldman", "oldman", 2);
+        }
+
         setDialogue();
     }
 
Index: .idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>KeyHandler.java
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.name b/.idea/.name
--- a/.idea/.name	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/.idea/.name	(date 1642923355381)
@@ -1,1 +1,1 @@
-KeyHandler.java
\ No newline at end of file
+CollisionChecker.java
\ No newline at end of file
Index: src/object/decoration/OBJ_Bridge.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package object.decoration;\r\n\r\nimport entity.Entity;\r\nimport main.GamePanel;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class OBJ_Bridge extends Entity {\r\n\r\n    GamePanel gp2;\r\n\r\n    public OBJ_Bridge(GamePanel gp) {\r\n\r\n        super(gp);\r\n\r\n        gp2 = gp;\r\n\r\n        name = \"Bridge\";\r\n        direction = \"down\";\r\n        imageWidth = gp.tileSize * 5;\r\n        imageHeight = gp.tileSize * 7;\r\n        down1 = setupScaledImage(\"/object/bridge\");\r\n        up1 = setupScaledImage(\"/object/xbridge\");\r\n        image = up1;\r\n        collision = false;\r\n\r\n        solidArea.x = 0;\r\n        solidArea.y = 0;\r\n        solidArea.width = gp.tileSize * 5;\r\n        solidArea.height = gp.tileSize * 7;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n    }\r\n\r\n\r\n\r\n    public void draw(Graphics2D g2){\r\n\r\n        BufferedImage image = this.image;\r\n        int screenX = worldX - gp2.player.worldX + gp2.player.screenX;\r\n        int screenY = worldY - gp2.player.worldY + gp2.player.screenY;\r\n\r\n        if(worldX + gp2.tileSize * 8 > gp2.player.worldX - gp2.player.screenX &&\r\n                worldX - gp2.tileSize * 8 < gp2.player.worldX + gp2.player.screenX &&\r\n                worldY + gp2.tileSize * 8 > gp2.player.worldY - gp2.player.screenY &&\r\n                worldY - gp2.tileSize * 8 < gp2.player.worldY + gp2.player.screenY){\r\n\r\n            g2.drawImage(image, screenX, screenY, imageWidth, imageHeight, null);\r\n        }\r\n        g2.setColor(Color.red);\r\n        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/object/decoration/OBJ_Bridge.java b/src/object/decoration/OBJ_Bridge.java
--- a/src/object/decoration/OBJ_Bridge.java	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/src/object/decoration/OBJ_Bridge.java	(date 1642873786504)
@@ -48,7 +48,7 @@
 
             g2.drawImage(image, screenX, screenY, imageWidth, imageHeight, null);
         }
-        g2.setColor(Color.red);
-        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);
+//        g2.setColor(Color.red);
+//        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);
     }
 }
Index: src/entity/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entity;\r\n\r\nimport main.GamePanel;\r\nimport main.KeyHandler;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class Player extends Entity{\r\n\r\n    KeyHandler keyH;\r\n    public final int screenX;\r\n    public final int screenY;\r\n    int standCounter = 0;\r\n    public int objIndex = 0;\r\n    public int npcIndex = 0;\r\n    public int stoneCount = 0;\r\n\r\n    public Player(GamePanel gp, KeyHandler keyH){\r\n\r\n        super(gp);\r\n        this.keyH = keyH;\r\n        type = 0;\r\n\r\n        screenX = gp.screenWidth/2 - (gp.tileSize/2);\r\n        screenY = gp.screenHeight/2 - (gp.tileSize/2);\r\n\r\n        solidArea = new Rectangle();\r\n        solidArea.x = 8;\r\n        solidArea.y = 16;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n        solidArea.width = 32;\r\n        solidArea.height = 32;\r\n\r\n        setDefaultValues();\r\n        getCharacterImage(\"player\", \"player\", 1);\r\n    }\r\n    public void setDefaultValues(){\r\n\r\n        worldX = gp.tileSize * 25;\r\n        worldY = gp.tileSize * 67;\r\n        speed = 6;\r\n        direction = \"left\";\r\n\r\n        // PLAYER STATUS\r\n        maxLife = 6;\r\n        life = maxLife;\r\n    }\r\n    public void update(){\r\n\r\n        // If player is on slippery ground\r\n        if(gp.eHandler.slipperyEvent == true){\r\n            slipperyUpdate();\r\n        }\r\n        // Player is moving normally\r\n        else if(keyH.upPressed == true || keyH.downPressed == true\r\n                || keyH.leftPressed == true || keyH.rightPressed == true || keyH.enterPressed == true){\r\n            normalUpdate();\r\n        }\r\n        // Player is standing still\r\n        else{\r\n            standUpdate();\r\n        }\r\n        // Check Invincible\r\n        if(invincible == true){\r\n            invincibleCounter++;\r\n            if(invincibleCounter > 60) {\r\n                invincible = false;\r\n                invincibleCounter = 0;\r\n            }\r\n        }\r\n        // When no life\r\n        if(life == 0){\r\n            reviveLocation();\r\n        }\r\n    }\r\n\r\n    public void normalUpdate(){\r\n\r\n        if(keyH.enterPressed == true){\r\n\r\n        }\r\n        else if(keyH.upPressed == true){\r\n            direction = \"up\";\r\n        }\r\n        else if(keyH.downPressed == true){\r\n            direction = \"down\";\r\n        }\r\n        else if(keyH.leftPressed == true){\r\n            direction = \"left\";\r\n        }\r\n        else if(keyH.rightPressed == true){\r\n            direction = \"right\";\r\n        }\r\n\r\n        // CHECK TILE COLLISION\r\n        collisionOn = false;\r\n        gp.cChecker.checkTile(this);\r\n\r\n        // CHECK OBJECT COLLISION\r\n        int objIndex = gp.cChecker.checkObject(this, true);\r\n        pickUpObject(objIndex);\r\n\r\n        // CHECK NPC COLLISION\r\n        int npcIndex = gp.cChecker.checkEntity(this, gp.npc);\r\n        interactNPC(npcIndex);\r\n\r\n        // CHECK MONSTER COLLISION\r\n        int monster1Index = gp.cChecker.checkEntity(this, gp.monster1);\r\n        contactMonster(monster1Index);\r\n\r\n        int monster2Index  = gp.cChecker.checkEntity(this, gp.monster2);\r\n        contactMonster(monster2Index);\r\n\r\n        // CHECK EVENT\r\n        gp.eHandler.checkEvent();\r\n\r\n        gp.keyH.enterPressed = false;\r\n\r\n        // IF COLLISION IS FALSE, PLAYER CAN MOVE\r\n        if(collisionOn == false){\r\n\r\n            switch (direction){\r\n                case \"up\":\r\n                    worldY -= speed;\r\n                    break;\r\n                case \"down\":\r\n                    worldY += speed;\r\n                    break;\r\n                case \"left\":\r\n                    worldX -= speed;\r\n                    break;\r\n                case \"right\":\r\n                    worldX += speed;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        spriteCounter++;\r\n        if(spriteCounter > 12){\r\n            if(spriteNum == 1){\r\n                spriteNum = 2;\r\n            }\r\n            else if(spriteNum == 2){\r\n                spriteNum = 1;\r\n            }\r\n            spriteCounter = 0;\r\n        }\r\n\r\n    }\r\n\r\n    // Change standing position image\r\n    public void standUpdate(){\r\n        standCounter++;\r\n\r\n        if(standCounter == 20){\r\n            spriteNum = 1;\r\n            standCounter = 0;\r\n        }\r\n    }\r\n\r\n    // Cave Mission\r\n    public void slipperyUpdate(){\r\n        // CHECK TILE COLLISION\r\n        collisionOn = false;\r\n        gp.cChecker.checkTile(this);\r\n\r\n        // CHECK OBJECT COLLISION\r\n        int objIndex = gp.cChecker.checkObject(this, true);\r\n        pickUpObject(objIndex);\r\n\r\n        // CHECK NPC COLLISION\r\n        int npcIndex = gp.cChecker.checkEntity(this, gp.npc);\r\n        interactNPC(npcIndex);\r\n\r\n        // CHECK EVENT\r\n        gp.eHandler.checkEvent();\r\n\r\n        gp.keyH.enterPressed = false;\r\n\r\n        if(collisionOn == true){\r\n            gp.eHandler.slipperyEvent = false;\r\n        }\r\n\r\n        // IF COLLISION IS FALSE, PLAYER CAN MOVE\r\n        if(collisionOn == false){\r\n\r\n            switch (direction){\r\n                case \"up\":\r\n                    worldY -= speed;\r\n                    break;\r\n                case \"down\":\r\n                    worldY += speed;\r\n                    break;\r\n                case \"left\":\r\n                    worldX -= speed;\r\n                    break;\r\n                case \"right\":\r\n                    worldX += speed;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Pick up Power Stone\r\n    public void pickUpObject(int i){\r\n\r\n        if(i != 999){\r\n\r\n            String objectName = gp.obj[i].name;\r\n\r\n            switch (objectName){\r\n                case \"Power Stone\":\r\n                    switch (i){\r\n                        // Get first stone\r\n                        case 9:\r\n                            gp.progressState = gp.caveOutState;\r\n                            gp.ui.hitCheckPoint = true;\r\n                            gp.ui.missionCount = 1;\r\n                            gp.obj[i] = null;\r\n                            gp.npc[5].conversationState = 2;\r\n                            break;\r\n                        // Get second stone\r\n                        case 10:\r\n                            gp.progressState = gp.forestOutState;\r\n                            gp.ui.hitCheckPoint = true;\r\n                            gp.ui.missionCount = 2;\r\n                            gp.obj[19].image = gp.obj[19].down1;\r\n                            gp.obj[19].collision = false;\r\n                            gp.npc[6].conversationState = 4;\r\n                            break;\r\n                        // Get last stone\r\n                        case 11:\r\n                            gp.progressState = gp.mazeOutState;\r\n                            gp.ui.hitCheckPoint = true;\r\n                            gp.ui.missionCount = 3;\r\n                            break;\r\n                    }\r\n                    gp.playSE(1);\r\n                    stoneCount++;\r\n                    gp.obj[i] = null;\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void interactNPC(int i){\r\n\r\n        if(i != 999){\r\n            if(gp.keyH.enterPressed == true){\r\n                gp.gameState = gp.dialogState;\r\n                gp.ui.dialogueType = gp.ui.conversationState;\r\n                gp.npc[i].speak();\r\n            }\r\n        }\r\n        else if(gp.ui.startConv == true){\r\n            gp.gameState = gp.dialogState;\r\n            gp.ui.dialogueType = gp.ui.conversationState;\r\n            gp.npc[0].speak();\r\n        }\r\n    }\r\n\r\n    public void contactMonster(int i){\r\n\r\n        if(i != 999){\r\n            if(invincible == false){\r\n                life -= 1;\r\n                invincible = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void contactBullet(int i, int z) {\r\n\r\n        if(i != 999) {\r\n            if(z != 999) {\r\n                if (invincible == false) {\r\n                    life -= 1;\r\n                    invincible = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Set Player position when dead\r\n    public void reviveLocation(){\r\n\r\n        gp.ui.currentDialogue = \"You Are Dead!\";\r\n        gp.ui.dialogueType = gp.ui.objInteractionState;\r\n        gp.gameState = gp.dialogState;\r\n        if(gp.progressState == gp.earlyState){\r\n            gp.player.worldX = gp.tileSize * 28;\r\n            gp.player.worldY = gp.tileSize * 67;\r\n            gp.player.direction = \"right\";\r\n        }\r\n        else if(gp.progressState == gp.caveInState){\r\n            gp.player.worldX = gp.tileSize * 55;\r\n            gp.player.worldY = gp.tileSize * 66;\r\n            gp.player.direction = \"up\";\r\n        }\r\n        else if(gp.progressState == gp.caveOutState){\r\n            gp.player.worldX = gp.tileSize * 56;\r\n            gp.player.worldY = gp.tileSize * 27;\r\n            gp.player.direction = \"left\";\r\n        }\r\n        else if(gp.progressState == gp.forestInState){\r\n            gp.player.worldX = gp.tileSize * 57;\r\n            gp.player.worldY = gp.tileSize * 68;\r\n            gp.player.direction = \"right\";\r\n        }\r\n        else if(gp.progressState == gp.forestOutState){\r\n            gp.player.worldX = gp.tileSize * 143;\r\n            gp.player.worldY = gp.tileSize * 51;\r\n            gp.player.direction = \"left\";\r\n        }\r\n        else if(gp.progressState == gp.mazeInState){\r\n            gp.player.worldX = gp.tileSize * 55;\r\n            gp.player.worldY = gp.tileSize * 70;\r\n            gp.player.direction = \"down\";\r\n        }\r\n        else if(gp.progressState == gp.mazeOutState){\r\n            gp.player.worldX = gp.tileSize * 125;\r\n            gp.player.worldY = gp.tileSize * 115;\r\n            gp.player.direction = \"left\";\r\n        }\r\n        else if(gp.progressState == gp.endingState){\r\n            gp.player.worldX = gp.tileSize * 53;\r\n            gp.player.worldY = gp.tileSize * 68;\r\n            gp.player.direction = \"left\";\r\n        }\r\n\r\n        life = maxLife;\r\n    }\r\n\r\n    public void draw(Graphics2D g2){\r\n\r\n//      g2.setColor(Color.white);\r\n//      g2.fillRect(x, y, gp.tileSize, gp.tileSize);\r\n\r\n        BufferedImage image = null;\r\n\r\n        switch (direction){\r\n            case \"up\":\r\n                if(spriteNum == 1){\r\n                    image = up1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = up2;\r\n                }\r\n                break;\r\n            case \"down\":\r\n                if(spriteNum == 1){\r\n                    image = down1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = down2;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                if(spriteNum == 1){\r\n                    image = left1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = left2;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if(spriteNum == 1){\r\n                    image = right1;\r\n                }\r\n                if(spriteNum == 2){\r\n                    image = right2;\r\n                }\r\n                break;\r\n        }\r\n\r\n        int x = screenX;\r\n        int y = screenY;\r\n\r\n        if(screenX > worldX){\r\n            x = worldX;\r\n        }\r\n        if(screenY > worldY){\r\n            y = worldY;\r\n        }\r\n        int rightOffset = gp.screenWidth - screenX;\r\n        if(rightOffset > gp.worldWidth - worldX){\r\n            x = gp.screenWidth - (gp.worldWidth - worldX);\r\n        }\r\n        int bottomOffset = gp.screenHeight - screenY;\r\n        if(bottomOffset > gp.worldHeight - worldY){\r\n            y = gp.screenHeight - (gp.worldHeight - worldY);\r\n        }\r\n\r\n        if(invincible == true) {\r\n            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3f));\r\n        }\r\n\r\n        g2.drawImage(image, x, y,null);\r\n\r\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1f));\r\n\r\n        // SHOW COLLISION RECTANGLE\r\n        g2.setColor(Color.red);\r\n        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);\r\n\r\n        g2.drawRect(gp.tileSize*68, gp.tileSize*83, gp.tileSize, gp.tileSize);\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/entity/Player.java b/src/entity/Player.java
--- a/src/entity/Player.java	(revision cf2953bacdbc20bd79d5eaea69e1bf6d136b260d)
+++ b/src/entity/Player.java	(date 1642871065050)
@@ -40,7 +40,7 @@
 
         worldX = gp.tileSize * 25;
         worldY = gp.tileSize * 67;
-        speed = 6;
+        speed = 10;
         direction = "left";
 
         // PLAYER STATUS
@@ -220,6 +220,7 @@
                             gp.ui.missionCount = 1;
                             gp.obj[i] = null;
                             gp.npc[5].conversationState = 2;
+                            gp.obj[13] = null;
                             break;
                         // Get second stone
                         case 10:
@@ -403,10 +404,10 @@
         g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1f));
 
         // SHOW COLLISION RECTANGLE
-        g2.setColor(Color.red);
-        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);
-
-        g2.drawRect(gp.tileSize*68, gp.tileSize*83, gp.tileSize, gp.tileSize);
+//        g2.setColor(Color.red);
+//        g2.drawRect(screenX + solidArea.x, screenY + solidArea.y, solidArea.width, solidArea.height);
+//
+//        g2.drawRect(gp.tileSize*68, gp.tileSize*83, gp.tileSize, gp.tileSize);
 
 
     }
